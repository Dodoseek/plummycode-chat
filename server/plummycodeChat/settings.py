"""
Django settings for plummycodeChat project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path

from django.utils.translation import gettext_lazy as _
from dotenv import load_dotenv

from .jazzmin_settings import (JAZZMIN_ADMIN_SETTINGS,
                               JAZZMIN_UI_TWEAKS_SETTINGS)
from .jwt_settings import SIMPLE_JWT_SETTINGS

load_dotenv()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY")


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG", "False")

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    "daphne",
    'jazzmin',
    'corsheaders',
    'django_filters',
    'sorl.thumbnail',
    'drf_spectacular',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'User.apps.UserConfig',
    'Chat.apps.ChatConfig',
    'FriendList.apps.FriendlistConfig',
    'rest_framework',
    'rest_framework_simplejwt',
]

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTStatelessUserAuthentication',
        # 'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        # 'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
    ],
    # 'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 40
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
]

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.redis.RedisCache',
        'LOCATION': os.getenv('REDIS_URL', 'redis://127.0.0.1:6379'),
    }
}

# Celery
# https://docs.celeryq.dev/en/stable/django/first-steps-with-django.html

CELERY_BROKER_URL = os.getenv("REDIS_URL", "redis://127.0.0.1:6379")
CELERY_RESULT_BACKEND = os.getenv("REDIS_URL", "redis://127.0.0.1:6379")

ROOT_URLCONF = 'plummycodeChat.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'plummycodeChat.wsgi.application'
ASGI_APPLICATION = "plummycodeChat.asgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': os.getenv("ENGINE", "django.db.backends.mysql"),
        'NAME': os.getenv("NAME", "django_dx"),
        'USER': os.getenv("USER", "django_dx"),
        'PASSWORD': os.getenv("PASSWORD", "django_dx"),
        'HOST': os.getenv("HOST", "127.0.0.1"),
        'PORT': os.getenv("PORT", "3306"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'ru'

LANGUAGES = [
    ("ru", _("Russian")),
    ("en", _("English")),
    ("fr", _("French")),
    ("de", _("German")),
]

USE_I18N = True
USE_L10N = True

TIME_ZONE = 'UTC'

USE_TZ = True

JAZZMIN_SETTINGS = JAZZMIN_ADMIN_SETTINGS

SIMPLE_JWT = SIMPLE_JWT_SETTINGS

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'), ]
STATIC_ROOT = os.path.join(BASE_DIR, 'img/')

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

LOCALE_PATHS = [os.path.join(BASE_DIR, 'locale')]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = "User.User"

CORS_ALLOWED_ORIGINS = [
    os.getenv("CORS_ALLOWED_ORIGINS", "http://127.0.0.1:3000"),
]

JAZZMIN_UI_TWEAKS = JAZZMIN_UI_TWEAKS_SETTINGS


SPECTACULAR_SETTINGS = {
    'SCHEMA_PATH_PREFIX': r'/api/v[1-9]',
    'SCHEMA_PATH_PREFIX_TRIM': False,

    "DEFAULT_QUERY_MANAGER": '_default_manager',

    'TITLE': "The Chat API from the PlummyCode team",
    'DESCRIPTION':
    'Thanks to this application, you can test working with the database using the REST API.',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
    'CONTACT': {
        "name": "Andrew Glushnev",
        'email': "glushnev22@gmail.com",
        "url": "https://andrewglushnev.ru/"
    },
    "SWAGGER_UI_SETTINGS": {
        "filter": True,  # включить поиск по тегам
        "defaultModelRendering": "example",
        'deepLinking': True,
        "persistAuthorization": True,
        "displayOperationId": True,
        "defaultModelsExpandDepth": 1,
        "defaultModelExpandDepth": 1,
        "displayRequestDuration": True,
        "docExpansion": 'list',
        "showExtensions": True,
        "showCommonExtensions": True,
        "syntaxHighlight": True,
        "requestSnippetsEnabled": True,
        "url": "http://127.0.0.1:8000/api/schema/",
        "syntaxHighlight.theme": "obsidian",
        "queryConfigEnabled": True,
        "pluginLoadType": "chain",
        # "presets": ["SwaggerUI.presets.ApisPreset"],
        # "maxDisplayedTags": 0,
        # "urls": [
        #     {"url": "http://127.0.0.1:8000/api/schema/", "name": "users"},
        #     {"url": "http://127.0.0.1:8000/api/v1/chat/", "name": "chat"}
        # ]

    },
    "COMPONENT_SPLIT_REQUEST": True,
    'SWAGGER_UI_DIST': "//unpkg.com/swagger-ui-dist@latest",  # shorthand to use the sidecar instead
    'SWAGGER_UI_FAVICON_HREF': STATIC_URL + "plummylogo.svg",
    'PREPROCESSING_HOOKS': ["FriendList.excluded_path.custom_preprocessing_hook"]
}
